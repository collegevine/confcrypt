defaults: &defaults
    working_directory: ~/collegevine/confcrypt
    parallelism: 1

    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts        # Came from Circle's own translation utility, not sure if really needed
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results  # Came from Circle's own translation utility, not sure if really needed

    docker:
    - image: jhenligne/confcrypt:0.0

version: 2
jobs:
  test-job:
    <<: *defaults
    steps:
    - checkout
    - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
    - restore_cache:
        keys:
        # This branch if available
        - circle20-{{ .Branch }}-
        # Default branch if not
        - circle20-master-
        # Any branch if there are none on the default branch - this should be unnecessary if you have your default branch configured correctly
        - circle20-
    - run:
        command: sysconfcpus -n 2 stack test :confcrypt-detailed-tests
        no_output_timeout: 3600s
    - store_test_results:
        path: $CIRCLE_ARTIFACTS
    - store_artifacts:
        path: $CIRCLE_ARTIFACTS
    - store_artifacts:
        path: $CIRCLE_TEST_REPORTS

  threshold-test-job:
    <<: *defaults
    steps:
    - checkout
    - restore_cache:
          name: Restore Cached Dependencies
          keys:
            - cci-haskell-v1-{{ checksum "package.yaml" }}-{{ checksum "stack.yaml" }}
    - run:
          name: Resolve/Update Dependencies
          command: stack setup
    - save_cache:
          name: Cache Dependencies
          key: cci-haskell-v1-{{ checksum "package.yaml" }}-{{ checksum "stack.yaml" }}
          paths:
            - ~/.stack
            - ~/.stack-work
    - restore_cache:
        keys:
        # This branch if available
        - circle20-{{ .Branch }}-
        # Default branch if not
        - circle20-master-
        # Any branch if there are none on the default branch - this should be unnecessary if you have your default branch configured correctly
        - circle20-
    - run:
        # All tests with default 80% threshold:
        command: sysconfcpus -n 2 stack test :confcrypt-threshold-tests --coverage
        # All tests with provided threshold:
        # ex: command: sysconfcpus -n 2 stack test :confcrypt-threshold-tests --coverage --ta "--threshold 90"
        no_output_timeout: 3600s

  coverage-job:
    <<: *defaults
    steps:
    - checkout
    - restore_cache:
        keys:
        # This branch if available
        - circle20-{{ .Branch }}-
        # Default branch if not
        - circle20-master-
        # Any branch if there are none on the default branch - this should be unnecessary if you have your default branch configured correctly
        - circle20-
    - run:
        command: stack hpc report --all 2>&1 | hpc-threshold
        no_output_timeout: 3600s

  lint-job:
      <<: *defaults
      steps:
      - checkout
      - run: source hlint.sh

workflows:
    version: 2

    build-and-test:
        jobs:
#            - test-job
            - threshold-test-job
            - coverage-job:
                requires:
                    - threshold-test-job
            - lint-job
